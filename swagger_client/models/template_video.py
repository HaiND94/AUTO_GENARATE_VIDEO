# coding: utf-8

"""
    YTB-CRAWLER

    YTB-CRAWLER

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class TemplateVideo(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'type_image': 'str',
        'title': 'str',
        'description': 'str',
        'image_url': 'str',
        'image_template_url': 'str',
        'status': 'str',
        'detail_status': 'str',
        'audio_ids': 'list[float]',
        'singer_ids': 'list[float]',
        'is_live': 'bool',
        'id': 'float',
        'channel_id': 'float',
        'account_id': 'float',
        'server_id': 'float',
        'country_id': 'float',
        'language_id': 'float',
        'created_at': 'datetime',
        'updated_at': 'datetime'
    }

    attribute_map = {
        'type_image': 'typeImage',
        'title': 'title',
        'description': 'description',
        'image_url': 'imageUrl',
        'image_template_url': 'imageTemplateUrl',
        'status': 'status',
        'detail_status': 'detailStatus',
        'audio_ids': 'audioIds',
        'singer_ids': 'singerIds',
        'is_live': 'isLive',
        'id': 'id',
        'channel_id': 'channelId',
        'account_id': 'accountId',
        'server_id': 'serverId',
        'country_id': 'countryId',
        'language_id': 'languageId',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt'
    }

    def __init__(self, type_image=None, title=None, description=None, image_url=None, image_template_url=None, status=None, detail_status=None, audio_ids=None, singer_ids=None, is_live=None, id=None, channel_id=None, account_id=None, server_id=None, country_id=None, language_id=None, created_at=None, updated_at=None):
        """
        TemplateVideo - a model defined in Swagger
        """

        self._type_image = None
        self._title = None
        self._description = None
        self._image_url = None
        self._image_template_url = None
        self._status = None
        self._detail_status = None
        self._audio_ids = None
        self._singer_ids = None
        self._is_live = None
        self._id = None
        self._channel_id = None
        self._account_id = None
        self._server_id = None
        self._country_id = None
        self._language_id = None
        self._created_at = None
        self._updated_at = None

        if type_image is not None:
          self.type_image = type_image
        if title is not None:
          self.title = title
        if description is not None:
          self.description = description
        if image_url is not None:
          self.image_url = image_url
        if image_template_url is not None:
          self.image_template_url = image_template_url
        if status is not None:
          self.status = status
        if detail_status is not None:
          self.detail_status = detail_status
        if audio_ids is not None:
          self.audio_ids = audio_ids
        if singer_ids is not None:
          self.singer_ids = singer_ids
        if is_live is not None:
          self.is_live = is_live
        if id is not None:
          self.id = id
        if channel_id is not None:
          self.channel_id = channel_id
        if account_id is not None:
          self.account_id = account_id
        if server_id is not None:
          self.server_id = server_id
        if country_id is not None:
          self.country_id = country_id
        if language_id is not None:
          self.language_id = language_id
        if created_at is not None:
          self.created_at = created_at
        if updated_at is not None:
          self.updated_at = updated_at

    @property
    def type_image(self):
        """
        Gets the type_image of this TemplateVideo.

        :return: The type_image of this TemplateVideo.
        :rtype: str
        """
        return self._type_image

    @type_image.setter
    def type_image(self, type_image):
        """
        Sets the type_image of this TemplateVideo.

        :param type_image: The type_image of this TemplateVideo.
        :type: str
        """

        self._type_image = type_image

    @property
    def title(self):
        """
        Gets the title of this TemplateVideo.

        :return: The title of this TemplateVideo.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """
        Sets the title of this TemplateVideo.

        :param title: The title of this TemplateVideo.
        :type: str
        """

        self._title = title

    @property
    def description(self):
        """
        Gets the description of this TemplateVideo.

        :return: The description of this TemplateVideo.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this TemplateVideo.

        :param description: The description of this TemplateVideo.
        :type: str
        """

        self._description = description

    @property
    def image_url(self):
        """
        Gets the image_url of this TemplateVideo.

        :return: The image_url of this TemplateVideo.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """
        Sets the image_url of this TemplateVideo.

        :param image_url: The image_url of this TemplateVideo.
        :type: str
        """

        self._image_url = image_url

    @property
    def image_template_url(self):
        """
        Gets the image_template_url of this TemplateVideo.

        :return: The image_template_url of this TemplateVideo.
        :rtype: str
        """
        return self._image_template_url

    @image_template_url.setter
    def image_template_url(self, image_template_url):
        """
        Sets the image_template_url of this TemplateVideo.

        :param image_template_url: The image_template_url of this TemplateVideo.
        :type: str
        """

        self._image_template_url = image_template_url

    @property
    def status(self):
        """
        Gets the status of this TemplateVideo.

        :return: The status of this TemplateVideo.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this TemplateVideo.

        :param status: The status of this TemplateVideo.
        :type: str
        """

        self._status = status

    @property
    def detail_status(self):
        """
        Gets the detail_status of this TemplateVideo.

        :return: The detail_status of this TemplateVideo.
        :rtype: str
        """
        return self._detail_status

    @detail_status.setter
    def detail_status(self, detail_status):
        """
        Sets the detail_status of this TemplateVideo.

        :param detail_status: The detail_status of this TemplateVideo.
        :type: str
        """

        self._detail_status = detail_status

    @property
    def audio_ids(self):
        """
        Gets the audio_ids of this TemplateVideo.

        :return: The audio_ids of this TemplateVideo.
        :rtype: list[float]
        """
        return self._audio_ids

    @audio_ids.setter
    def audio_ids(self, audio_ids):
        """
        Sets the audio_ids of this TemplateVideo.

        :param audio_ids: The audio_ids of this TemplateVideo.
        :type: list[float]
        """

        self._audio_ids = audio_ids

    @property
    def singer_ids(self):
        """
        Gets the singer_ids of this TemplateVideo.

        :return: The singer_ids of this TemplateVideo.
        :rtype: list[float]
        """
        return self._singer_ids

    @singer_ids.setter
    def singer_ids(self, singer_ids):
        """
        Sets the singer_ids of this TemplateVideo.

        :param singer_ids: The singer_ids of this TemplateVideo.
        :type: list[float]
        """

        self._singer_ids = singer_ids

    @property
    def is_live(self):
        """
        Gets the is_live of this TemplateVideo.

        :return: The is_live of this TemplateVideo.
        :rtype: bool
        """
        return self._is_live

    @is_live.setter
    def is_live(self, is_live):
        """
        Sets the is_live of this TemplateVideo.

        :param is_live: The is_live of this TemplateVideo.
        :type: bool
        """

        self._is_live = is_live

    @property
    def id(self):
        """
        Gets the id of this TemplateVideo.

        :return: The id of this TemplateVideo.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this TemplateVideo.

        :param id: The id of this TemplateVideo.
        :type: float
        """

        self._id = id

    @property
    def channel_id(self):
        """
        Gets the channel_id of this TemplateVideo.

        :return: The channel_id of this TemplateVideo.
        :rtype: float
        """
        return self._channel_id

    @channel_id.setter
    def channel_id(self, channel_id):
        """
        Sets the channel_id of this TemplateVideo.

        :param channel_id: The channel_id of this TemplateVideo.
        :type: float
        """

        self._channel_id = channel_id

    @property
    def account_id(self):
        """
        Gets the account_id of this TemplateVideo.

        :return: The account_id of this TemplateVideo.
        :rtype: float
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """
        Sets the account_id of this TemplateVideo.

        :param account_id: The account_id of this TemplateVideo.
        :type: float
        """

        self._account_id = account_id

    @property
    def server_id(self):
        """
        Gets the server_id of this TemplateVideo.

        :return: The server_id of this TemplateVideo.
        :rtype: float
        """
        return self._server_id

    @server_id.setter
    def server_id(self, server_id):
        """
        Sets the server_id of this TemplateVideo.

        :param server_id: The server_id of this TemplateVideo.
        :type: float
        """

        self._server_id = server_id

    @property
    def country_id(self):
        """
        Gets the country_id of this TemplateVideo.

        :return: The country_id of this TemplateVideo.
        :rtype: float
        """
        return self._country_id

    @country_id.setter
    def country_id(self, country_id):
        """
        Sets the country_id of this TemplateVideo.

        :param country_id: The country_id of this TemplateVideo.
        :type: float
        """

        self._country_id = country_id

    @property
    def language_id(self):
        """
        Gets the language_id of this TemplateVideo.

        :return: The language_id of this TemplateVideo.
        :rtype: float
        """
        return self._language_id

    @language_id.setter
    def language_id(self, language_id):
        """
        Sets the language_id of this TemplateVideo.

        :param language_id: The language_id of this TemplateVideo.
        :type: float
        """

        self._language_id = language_id

    @property
    def created_at(self):
        """
        Gets the created_at of this TemplateVideo.

        :return: The created_at of this TemplateVideo.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """
        Sets the created_at of this TemplateVideo.

        :param created_at: The created_at of this TemplateVideo.
        :type: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """
        Gets the updated_at of this TemplateVideo.

        :return: The updated_at of this TemplateVideo.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """
        Sets the updated_at of this TemplateVideo.

        :param updated_at: The updated_at of this TemplateVideo.
        :type: datetime
        """

        self._updated_at = updated_at

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, TemplateVideo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
